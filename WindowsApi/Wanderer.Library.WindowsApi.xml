<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wanderer.Library.WindowsApi</name>
    </assembly>
    <members>
        <member name="T:Wanderer.Library.WindowsApi.Authentication.LogonProvider">
            <summary>
            The logon provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonProvider.Default">
            <summary>
            Use the standard logon provider for the system.
            The default security provider is negotiate,
            unless you pass NULL for the domain name and the user name is not in UPN format.
            In this case, the default provider is NTLM.
            NOTE: Windows 2000/NT:   The default security provider is NTLM.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonProvider.WinNt40">
            <summary>
            Use the NTLM logon provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonProvider.WinNt50">
            <summary>
            Use the negotiate logon provider.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authentication.LogonType">
            <summary>
            The type of logon operation.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.Interactive">
            <summary>
            This logon type is intended for users who will be interactively using the computer,
            such as a user being logged on by a terminal server, remote shell, or similar process.
            This logon type has the additional expense of caching logon information for disconnected operations;
            therefore, it is inappropriate for some client/server applications, such as a mail server.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.Network">
            <summary>
            This logon type is intended for high performance servers to authenticate plaintext passwords.
            The <see cref="M:Wanderer.Library.WindowsApi.Authentication.NativeMethods.LogonUser(System.String,System.String,System.String,Wanderer.Library.WindowsApi.Authentication.LogonType,Wanderer.Library.WindowsApi.Authentication.LogonProvider)"/>
            function does not cache credentials for this logon type.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.Batch">
            <summary>
            This logon type is intended for batch servers,
            where processes may be executing on behalf of a user without their direct intervention.
            This type is also for higher performance servers that process many plaintext authentication attempts at a time,
            such as mail or web servers.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.Service">
            <summary>
            Indicates a service-type logon. The account provided must have the service privilege enabled.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.Unlock">
            <summary>
            This logon type is for GINA DLLs that log on users who will be interactively using the computer.
            This logon type can generate a unique audit record that shows when the workstation was unlocked.
            GINAs are no longer supported.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.NetworkCleartext">
            <summary>
            This logon type preserves the name and password in the authentication package,
            which allows the server to make connections to other network servers while impersonating the client.
            A server can accept plaintext credentials from a client,
            call <see cref="M:Wanderer.Library.WindowsApi.Authentication.NativeMethods.LogonUser(System.String,System.String,System.String,Wanderer.Library.WindowsApi.Authentication.LogonType,Wanderer.Library.WindowsApi.Authentication.LogonProvider)"/>,
            verify that the user can access the system across the network, and still communicate with other servers.
            NOTE: Windows NT:  This value is not supported. 
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authentication.LogonType.NewCredentials">
            <summary>
            This logon type allows the caller to clone its current token and specify new credentials for outbound connections.
            The new logon session has the same local identifier but uses different credentials for other network connections.
            This logon type is supported only by the <see cref="F:Wanderer.Library.WindowsApi.Authentication.LogonProvider.WinNt50"/> logon provider.
            NOTE: Windows NT:  This value is not supported. 
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authentication.NativeMethods">
            <summary>
            Authentication Windows functions.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights">
            <summary>
            Contains different access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.AccessSystemSecurity">
            <summary>
            Controls the ability to get or set the SACL in an object's security descriptor.
            The system grants this access right only if the <see cref="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Security"/> privilege is enabled
            in the access token of the requesting thread.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.MaximumAllowed">
            <summary>
            Determines all access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsRequired">
            <summary>
            Combines <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.Delete"/>, <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl"/>,
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteDac"/> and <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteOwner"/> access.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsRead">
            <summary>
            Currently defined to equal <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsWrite">
            <summary>
            Currently defined to equal <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsExecute">
            <summary>
            Currently defined to equal <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsAll">
            <summary>
            Combines <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.Delete"/>, <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl"/>, <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteDac"/>,
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteOwner"/> and <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.Synchronize"/> access.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights.File">
            <summary>
            File access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.ReadData">
            <summary>
            For a file object, the right to read the corresponding file data.
            For a directory object, the right to read the corresponding directory data.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.ListDirectory">
            <summary>
            For a directory, the right to list the contents of the directory.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.WriteData">
            <summary>
            For a file object, the right to write data to the file.
            For a directory object, the right to create a file in the directory (<see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AddFile"/>).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AddFile">
            <summary>
            For a directory, the right to create a file in the directory.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AppendData">
            <summary>
            For a file object, the right to append data to the file.
            (For local files, write operations will not overwrite
            existing data if this flag is specified without <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.WriteData"/>.)
            For a directory object, the right to create a subdirectory (<see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AddSubdirectory"/>).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AddSubdirectory">
            <summary>
            For a directory, the right to create a subdirectory.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.CreatePipeInstance">
            <summary>
            For a named pipe, the right to create a pipe.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.ReadEA">
            <summary>
            The right to read extended file attributes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.WriteEA">
            <summary>
            The right to write extended file attributes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.Execute">
            <summary>
            For a native code file, the right to execute the file.
            This access right given to scripts may cause the script to be executable,
            depending on the script interpreter.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.Traverse">
            <summary>
            For a directory, the right to traverse the directory.
            By default, users are assigned the BYPASS_TRAVERSE_CHECKING privilege (<see cref="F:Wanderer.Library.WindowsApi.Authorization.Privilege.ChangeNotify"/>),
            which ignores the Traverse access right.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.DeleteChild">
            <summary>
            For a directory, the right to delete a directory and all the files it contains,
            including read-only files.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.ReadAttributes">
            <summary>
            The right to read file attributes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.WriteAttributes">
            <summary>
            The right to write file attributes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AllAccess">
            <summary>
            All possible access rights for a file.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights.FileGeneric">
            <summary>
            Generic file access rights.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights.Generic">
            <summary>
            Generic access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Generic.Read">
            <summary>
            Read access.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Generic.Write">
            <summary>
            Write access.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Generic.Execute">
            <summary>
            Execute access.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Generic.All">
            <summary>
            All possible access rights.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard">
            <summary>
            Standard access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.Delete">
            <summary>
            The right to delete the object.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl">
            <summary>
            The right to read the information in the object's security descriptor,
            not including the information in the system access control list (SACL).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteDac">
            <summary>
            The right to modify the discretionary access control list (DACL)
            in the object's security descriptor.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteOwner">
            <summary>
            The right to change the owner in the object's security descriptor.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.Synchronize">
            <summary>
            The right to use the object for synchronization.
            This enables a thread to wait until the object is in the signaled state.
            Some object types do not support this access right.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager">
            <summary>
            Service Control Manager access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.Connect">
            <summary>
            Required to connect to the service control manager.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.CreateService">
            <summary>
            Required to call the CreateService function to create a service object and add it to the database.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.EnumerateService">
            <summary>
            Required to call the EnumServicesStatus or EnumServicesStatusEx function to list the services that are in the database.
            Required to call the NotifyServiceStatusChange function to receive notification when any service is created or deleted.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.Lock">
            <summary>
            Required to call the LockServiceDatabase function to acquire a lock on the database.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.QueryLockStatus">
            <summary>
            Required to call the QueryServiceLockStatus function to retrieve the lock status information for the database.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.ModifyBootConfig">
            <summary>
            Required to call the NotifyBootConfigStatus function.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.ServiceControlManager.AllAccess">
            <summary>
            Includes <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsRequired"/>, in addition to all access rights in this table.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service">
            <summary>
            Service access rights.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.QueryConfig">
            <summary>
            Required to call the QueryServiceConfig and QueryServiceConfig2 functions to query the service configuration.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.ChangeConfig">
            <summary>
            Required to call the <see cref="!:Services.NativeMethods.ChangeServiceConfig(SafeServiceHandle,ServiceTypeFull,ServiceStartModeFull,ServiceErrorControlType,string,string,string,string,string,string)"/>
            or ChangeServiceConfig2 function to change the service configuration.
            Because this grants the caller the right to change the executable file that the system runs,
            it should be granted only to administrators.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.QueryStatus">
            <summary>
            Required to call the QueryServiceStatus or QueryServiceStatusEx function to ask the service control manager about the status of the service.
            Required to call the NotifyServiceStatusChange function to receive notification when a service changes status.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.EnumerateDependents">
            <summary>
            Required to call the EnumDependentServices function to enumerate all the services dependent on the service.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.Start">
            <summary>
            Required to call the StartService function to start the service.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.Stop">
            <summary>
            Required to call the ControlService function to stop the service.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.PauseContinue">
            <summary>
            Required to call the ControlService function to pause or continue the service.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.Interrogate">
            <summary>
            Required to call the ControlService function to ask the service to report its status immediately.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.UserDefinedControl">
            <summary>
            Required to call the ControlService function to specify a user-defined control code.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Service.AllAccess">
            <summary>
            Includes <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.StandardRightsRequired"/> in addition to all access rights in this table.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.Luid">
            <summary>
            An LUID is a 64-bit value guaranteed to be unique only on the system on which it was generated.
            The uniqueness of a locally unique identifier (LUID) is guaranteed only until the system is restarted.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Luid.LowPart">
            <summary>
            Low-order bits.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Luid.HighPart">
            <summary>
            High-order bits.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.LuidAndAttributes">
            <summary>
            The LuidAndAttributes structure represents a locally unique identifier (<see cref="T:Wanderer.Library.WindowsApi.Authorization.Luid"/>) and its attributes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.LuidAndAttributes.Luid">
            <summary>
            Specifies an <see cref="T:Wanderer.Library.WindowsApi.Authorization.Luid"/> value.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.LuidAndAttributes.Attributes">
            <summary>
            Specifies attributes of the <see cref="F:Wanderer.Library.WindowsApi.Authorization.LuidAndAttributes.Luid"/>.
            This value contains up to 32 one-bit flags.
            Its meaning is dependent on the definition and use of the <see cref="F:Wanderer.Library.WindowsApi.Authorization.LuidAndAttributes.Luid"/>.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.NativeMethods">
            <summary>
            Authorization Windows API functions.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.Privilege">
            <summary>
            List of available privileges.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.AssignPrimaryToken">
            <summary>
            Required to assign the primary token of a process.
            User Right: Replace a process-level token.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Audit">
            <summary>
            Required to generate audit-log entries. Give this privilege to secure servers.
            User Right: Generate security audits.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Backup">
            <summary>
            Required to perform backup operations.
            This privilege causes the system to grant all read access control to any file,
            regardless of the access control list (ACL) specified for the file.
            Any access request other than read is still evaluated with the ACL.
            This privilege is required by the RegSaveKey and RegSaveKeyEx functions.
            The following access rights are granted if this privilege is held:
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.ReadControl"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.AccessSystemSecurity"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.FileGeneric.Read"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.Traverse"/>
            User Right: Back up files and directories.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.ChangeNotify">
            <summary>
            Required to receive notifications of changes to files or directories.
            This privilege also causes the system to skip all traversal access checks.
            It is enabled by default for all users.
            User Right: Bypass traverse checking.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.CreateGlobal">
            <summary>
            Required to create named file mapping objects in the global namespace during Terminal Services sessions.
            This privilege is enabled by default for administrators, services, and the local system account.
            User Right: Create global objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.CreatePagefile">
            <summary>
            Required to create a paging file.
            User Right: Create a pagefile.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.CreatePermanent">
            <summary>
            Required to create a permanent object.
            User Right: Create permanent shared objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.CreateSymbolicLink">
            <summary>
            Required to create a symbolic link.
            User Right: Create symbolic links.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.CreateToken">
            <summary>
            Required to create a primary token.
            User Right: Create a token object.
            You cannot add this privilege to a user account with the "Create a token object" policy.
            Additionally, you cannot add this privilege to an owned process using Windows APIs.
            Windows Server 2003 and Windows XP with SP1 and earlier: 
            Windows APIs can add this privilege to an owned process.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Debug">
            <summary>
            Required to debug and adjust the memory of a process owned by another account.
            User Right: Debug programs.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.EnableDelegation">
            <summary>
            Required to mark user and computer accounts as trusted for delegation.
            User Right: Enable computer and user accounts to be trusted for delegation.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Impersonate">
            <summary>
            Required to impersonate.
            User Right: Impersonate a client after authentication.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.IncreaseBasePriority">
            <summary>
            Required to increase the base priority of a process.
            User Right: Increase scheduling priority.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.IncreaseQuota">
            <summary>
            Required to increase the quota assigned to a process.
            User Right: Adjust memory quotas for a process.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.IncreaseWorkingSet">
            <summary>
            Required to allocate more memory for applications that run in the context of users.
            User Right: Increase a process working set.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.LoadDriver">
            <summary>
            Required to load or unload a device driver.
            User Right: Load and unload device drivers.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.LockMemory">
            <summary>
            Required to lock physical pages in memory.
            User Right: Lock pages in memory.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.MachineAccount">
            <summary>
            Required to create a computer account.
            User Right: Add workstations to domain.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.ManageVolume">
            <summary>
            Required to enable volume management privileges.
            User Right: Manage the files on a volume.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.ProfileSingleProcess">
            <summary>
            Required to gather profiling information for a single process.
            User Right: Profile single process.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Relabel">
            <summary>
            Required to modify the mandatory integrity level of an object.
            User Right: Modify an object label.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.RemoteShutdown">
            <summary>
            Required to shut down a system using a network request.
            User Right: Force shutdown from a remote system.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Restore">
            <summary>
            Required to perform restore operations.
            This privilege causes the system to grant all write access control to any file,
            regardless of the ACL specified for the file.
            Any access request other than write is still evaluated with the ACL.
            Additionally, this privilege enables you to set any valid user or group SID as the owner of a file.
            This privilege is required by the RegLoadKey function.
            The following access rights are granted if this privilege is held:
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteDac"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.WriteOwner"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.AccessSystemSecurity"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.FileGeneric.Write"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AddFile"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.File.AddSubdirectory"/>
            <see cref="F:Wanderer.Library.WindowsApi.Authorization.AccessRights.Standard.Delete"/>
            User Right: Restore files and directories.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Security">
            <summary>
            Required to perform a number of security-related functions,
            such as controlling and viewing audit messages.
            This privilege identifies its holder as a security operator.
            User Right: Manage auditing and security log.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Shutdown">
            <summary>
            Required to shut down a local system.
            User Right: Shut down the system.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.SyncAgent">
            <summary>
            Required for a domain controller to use the Lightweight Directory Access Protocol directory synchronization services.
            This privilege enables the holder to read all objects and properties in the directory,
            regardless of the protection on the objects and properties.
            By default, it is assigned to the Administrator and LocalSystem accounts on domain controllers.
            User Right: Synchronize directory service data.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.SystemEnvironment">
            <summary>
            Required to modify the nonvolatile RAM of systems that use this type of memory to store configuration information.
            User Right: Modify firmware environment values.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.SystemProfile">
            <summary>
            Required to gather profiling information for the entire system.
            User Right: Profile system performance.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Systemtime">
            <summary>
            Required to modify the system time.
            User Right: Change the system time.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.TakeOwnership">
            <summary>
            Required to take ownership of an object without being granted discretionary access.
            This privilege allows the owner value to be set only to those values that the holder may legitimately assign as the owner of an object.
            User Right: Take ownership of files or other objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Tcb">
            <summary>
            This privilege identifies its holder as part of the trusted computer base.
            Some trusted protected subsystems are granted this privilege.
            User Right: Act as part of the operating system.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.TimeZone">
            <summary>
            Required to adjust the time zone associated with the computer's internal clock.
            User Right: Change the time zone.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.TrustedCredManAccess">
            <summary>
            Required to access Credential Manager as a trusted caller.
            User Right: Access Credential Manager as a trusted caller.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.Undock">
            <summary>
            Required to undock a laptop.
            User Right: Remove computer from docking station.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.Privilege.UnsolicitedInput">
            <summary>
            Required to read unsolicited input from a terminal device.
            User Right: Not applicable.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.PrivilegeAttribute">
            <summary>
            Privilege attributes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.PrivilegeAttribute.EnabledByDefault">
            <summary>
            The privilege is enabled by default.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.PrivilegeAttribute.Enabled">
            <summary>
            The privilege is enabled.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.PrivilegeAttribute.Removed">
            <summary>
            Used to remove a privilege.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.PrivilegeAttribute.UsedForAccess">
            <summary>
            The privilege was used to gain access to an object or service.
            This flag is used to identify the relevant privileges in a set
            passed by a client application that may contain unnecessary privileges.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.TokenPrivileges">
            <summary>
            Contains information about a set of privileges for an access token.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.TokenPrivileges.PrivilegeCount">
            <summary>
            This must be set to the number of entries in the <see cref="F:Wanderer.Library.WindowsApi.Authorization.TokenPrivileges.Privileges"/> array.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.TokenPrivileges.Privileges">
            <summary>
            Specifies an array of <see cref="T:Wanderer.Library.WindowsApi.Authorization.LuidAndAttributes"/> structures.
            Each structure contains the <see cref="T:Wanderer.Library.WindowsApi.Authorization.Luid"/> and attributes of a privilege.
            To get the name of the privilege associated with a <see cref="T:Wanderer.Library.WindowsApi.Authorization.Luid"/>,
            call the <see cref="M:Wanderer.Library.WindowsApi.Authorization.NativeMethods.LookupPrivilegeName(System.String,Wanderer.Library.WindowsApi.Authorization.Luid@,System.Text.StringBuilder,System.Int32@)"/> function,
            passing the address of the <see cref="T:Wanderer.Library.WindowsApi.Authorization.Luid"/> as the value of the luid parameter.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Authorization.TokenType">
            <summary>
            The TokenType enumeration contains values that differentiate between a primary token and an impersonation token.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.TokenType.Primary">
            <summary>
            Indicates a primary token.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Authorization.TokenType.Impersonation">
            <summary>
            Indicates an impersonation token.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter">
            <summary>
            Contains the filter flags to use for down-level scopes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Users">
            <summary>
            Includes user objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.LocalGroups">
            <summary>
            Includes all local groups.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.GlobalGroups">
            <summary>
            Includes all global groups.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Computers">
            <summary>
            Includes computer objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.World">
            <summary>
            Includes the well-known security principal "World (Everyone)", a group that includes all users.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.AuthenticatedUser">
            <summary>
            Includes the well-known security principal "Authenticated User",
            a group that includes all authenticated accounts in the target domain and its trusted domains.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Anonymous">
            <summary>
            Includes the well-known security principal "Anonymous", which refers to null session logons.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Batch">
            <summary>
            Includes the well-known security principal "Batch", which refers to batch server logons.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.CreatorOwner">
            <summary>
            Includes the well-known security principal "Creator Owner".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.CreatorGroup">
            <summary>
            Includes the well-known security principal "Creator Group".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Dialup">
            <summary>
            Includes the well-known security principal "Dialup".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Interactive">
            <summary>
            Includes the well-known security principal "Interactive", which refers to users who log on to interactively use the computer.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Network">
            <summary>
            Includes the well-known security principal "Network", which refers to network logons for high performance servers.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Service">
            <summary>
            Includes the well-known security principal "Service", which refers to Win32 service logons.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.System">
            <summary>
            Includes the well-known security principal "System", which refers to the LocalSystem account.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.ExcludeBuiltInGroups">
            <summary>
            Excludes local built-in groups returned by groups' enumeration.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.TerminalServer">
            <summary>
            Includes the "Terminal Server" well-known security principal.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.AllWellKnownSIDs">
            <summary>
            Includes all well-known security principals.
            This flag is the same as specifying all of the well-known security principal flags listed in this table.
            This flag should be used for forward compatibility because it causes any other down-level,
            well-known SIDs that might be added in the future your code to automatically be included.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.LocalService">
            <summary>
            Includes the "Local Service" well-known security principal.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.NetworkService">
            <summary>
            Includes the "Network Service" well-known security principal.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.RemoteLogon">
            <summary>
            Includes the "Remote Logon" well-known security principal.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.InternetUser">
            <summary>
            Includes the "Internet User" well-known security principal.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.OwnerRights">
            <summary>
            Includes the "Owner Rights" well-known security principal.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Services">
            <summary>
            Includes "Service SIDs" of all installed services.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter">
            <summary>
            Filter flags to use in <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilterFlags"/> structure.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.IncludeAdvancedView">
            <summary>
            Includes objects that have the showInAdvancedViewOnly attribute set to TRUE.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.Users">
            <summary>
            Includes user objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.BuiltInGroups">
            <summary>
            Includes built-in group objects.
            Built-in groups are group objects with a groupType value that contain the GROUP_TYPE_BUILTIN_LOCAL_GROUP (0x00000001),
            GROUP_TYPE_RESOURCE_GROUP (0x00000004), and GROUP_TYPE_SECURITY_ENABLED (0x80000000) flags.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.WellKnownPrincipals">
            <summary>
            Includes the contents of the Well Known Security Principals container.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.UniversalGroupsDL">
            <summary>
            Includes distribution group objects with universal scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.UniversalGroupsSE">
            <summary>
            Includes security groups with universal scope.
            This flag has no affect in a mixed mode domain because universal security groups do not exist in mixed mode domains.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.GlobalGroupsDL">
            <summary>
            Includes distribution group objects with global scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.GlobalGroupsSE">
            <summary>
            Includes security group objects with global scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.DomainLocalGroupsDL">
            <summary>
            Includes distribution group objects with domain local scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.DomainLocalGroupsSE">
            <summary>
            Includes security group objects with domain local scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.Contacts">
            <summary>
            Includes contact objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.Computers">
            <summary>
            Includes computer objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.ServiceAccounts">
            <summary>
            Includes managed service account and group managed service account objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.PasswordSettingsObjects">
            <summary>
            Includes password settings objects.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilterFlags">
            <summary>
            The DSOPFilterFlags structure contains flags that indicate the types of objects presented to the user for a specified scope or scopes.
            This structure is contained in the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo"/> structure when calling <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilterFlags.Uplevel">
            <summary>
            Contains a <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags"/> structure that contains the filter flags to use for up-level scopes.
            An up-level scope is a scope that supports the ADSI LDAP provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilterFlags.flDownlevel">
            <summary>
            Contains the filter flags to use for down-level scopes.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFlag">
            <summary>
            Avaliable option flags for <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.flOptions"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFlag.MultiSelect">
            <summary>
            If this flag is set, the user can select multiple objects.
            If this flag is not set, the user can select only one object.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFlag.SkipTargetComputerDCCheck">
            <summary>
            If this flag is set and the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.TargetComputer"/> flag is set in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.aDsScopeInfos"/> array,
            the target computer is always included in the Look in drop-down list.
            If this flag is not set and the target computer is an up-level or down-level domain controller,
            the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.TargetComputer"/> flag is ignored and the target computer is not included in the Look in drop-down list.
            To save time during initialization, this flag should be set if it is known that the target computer is not a domain controller.
            However, if the target computer is a domain controller,
            this flag should not be set because it is better for the user to select domain objects from the domain scope rather than from the domain controller itself.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo">
            <summary>
            The DSOPInitInfo structure contains data required to initialize an object picker dialog box.
            This structure is used with the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/> method.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.cbSize">
            <summary>
            Contains the size, in bytes, of the structure.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.pwzTargetComputer">
            <summary>
            Pointer to a null-terminated Unicode string that contains the name of the target computer.
            The dialog box operates as if it is running on the target computer,
            using the target computer to determine the joined domain and enterprise.
            If this value is null, the target computer is the local computer.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.cDsScopeInfos">
            <summary>
            Specifies the number of elements in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.aDsScopeInfos"/> array.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.aDsScopeInfos">
            <summary>
            Pointer to an array of <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo"/> structures that describe the scopes from which the user can select objects.
            This member cannot be NULL (<see cref="F:System.IntPtr.Zero"/>) and the array must contain at least one element because the object picker cannot operate without at least one scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.flOptions">
            <summary>
            Flags that determine the object picker options.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.cAttributesToFetch">
            <summary>
            Contains the number of elements in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.apwzAttributeNames"/> array.
            This member can be zero.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.apwzAttributeNames">
            <summary>
            Pointer to an array of null-terminated Unicode strings that contain the names of the attributes to retrieve for each selected object.
            If <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.cAttributesToFetch"/> is zero, this member is ignored.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag">
            <summary>
            Flags that indicate the format used to return ADsPath for objects selected from this scope.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.StartingScope">
            <summary>
            The scope described by this structure is initially selected in the Look in drop-down list.
            Only one scope can specify this flag. If no scope specifies this flag,
            the initial scope is the first successfully created scope in the array of scopes passed to the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/> method.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.WantProviderWinNT">
            <summary>
            The ADsPaths are converted to use the WinNT provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.WantProviderLDAP">
            <summary>
            The ADsPaths are converted to use the LDAP provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.WantProviderGC">
            <summary>
            The ADsPaths for objects selected from this scope are converted to use the GC provider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.WantSIDPath" -->
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.WantDownLevelBuiltInPath">
            <summary>
            The ADsPaths for down-level, well-known SID objects are an empty string unless this flag is specified (For example; <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPDownLevelFilter.Interactive"/>).
            If this flag is specified, the paths have the form WinNT://NT AUTHORITY/Interactive or WinNT://Creator owner.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.DefaultFilterUsers">
            <summary>
            If the scope filter contains users, select the Users check box in the dialog.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.DefaultFilterGroups">
            <summary>
            If the scope filter contains groups, select the Groups check box in the dialog.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.DefaultFilterComputers">
            <summary>
            If the scope filter contains computers, select the Computers check box in the dialog.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.DefaultFilterContacts">
            <summary>
            If the scope filter contains contacts, select the Contacts check box in the dialog.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.DefaultFilterServiceAccounts">
            <summary>
            If the scope filter contains service accounts, select the Service Accounts and Group Managed Service Accounts check boxes in the dialog.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeFlag.DefaultFilterPasswordSettingsObjects">
            <summary>
            If the scope filter contains password setting objects, select the Password Setting Objects check box in the dialog.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo">
            <summary>
            The DSOPScopeInitInfo structure describes one or more scope types that have the same attributes.
            A scope type is a type of location, for example a domain, computer, or Global Catalog, from which the user can select objects.
            This structure is used with <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo"/> when calling <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.cbSize">
            <summary>
            Contains the size, in bytes, of the structure.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.flType">
            <summary>
            Flags that indicate the scope types described by this structure.
            You can combine multiple scope types if all specified scopes use the same settings.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.flScope">
            <summary>
            Flags that indicate the format used to return ADsPath for objects selected from this scope.
            The flScope member can also indicate the initial scope displayed in the Look in drop-down list.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.FilterFlags">
            <summary>
            Contains a <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilterFlags"/> structure that indicates the types of objects presented to the user for this scope or scopes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.pwzDcName">
            <summary>
            Pointer to a null-terminated Unicode string that contains the name of a domain controller of the domain to which the target computer is joined.
            This member is used only if the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.flType"/> member contains the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.UpLevelJoinedDomain"/> flag.
            If that flag is not set, pwzDcName must be null.
            This member can be null even if the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.UpLevelJoinedDomain"/> flag is specified, in which case, the dialog box looks up the domain controller.
            This member enables you to name a specific domain controller in a multimaster domain.
            For example, an administrative application might make changes on a domain controller in a multimaster domain,
            and then open the object picker dialog box before the changes have been replicated on the other domain controllers.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.pwzADsPath">
            <summary>
            Reserved; must be null.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.hr">
            <summary>
            Contains an <see cref="T:Wanderer.Library.WindowsApi.HResults"/> value that indicates the status of the specific scope.
            If the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/> method successfully creates the scope, or scopes, specified by this structure, hr contains <see cref="F:Wanderer.Library.WindowsApi.HResults.OK"/>.
            Otherwise, hr contains an error code.
            If <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/> returns <see cref="F:Wanderer.Library.WindowsApi.HResults.OK"/>,
            the hr members of all the specified <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo"/> structures also contain <see cref="F:Wanderer.Library.WindowsApi.HResults.OK"/>.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType">
            <summary>
            Flags that indicate the scope types described by <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo"/> structure.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.TargetComputer">
            <summary>
            Computer specified by the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.pwzTargetComputer"/>.
            If the target computer is an up-level or down-level domain controller,
            this flag is ignored unless the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFlag.SkipTargetComputerDCCheck"/> flag is set in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.flOptions"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.UpLevelJoinedDomain">
            <summary>
            An up-level domain to which the target computer is joined.
            If this flag is set, use the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.pwzDcName"/> member to specify the name of a domain controller in the joined domain.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.DownLevelJoinedDomain">
            <summary>
            A down-level domain to which the target computer is joined.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.EnterpriseDomain">
            <summary>
            All Windows 2000 domains in the enterprise to which the target computer belongs.
            If the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.UpLevelJoinedDomain"/> scope is specified,
            then the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.EnterpriseDomain"/> scope represents all Windows 2000 domains in the enterprise except the joined domain.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.GlobalCatalog">
            <summary>
            A scope that contains objects from all domains in the enterprise.
            An enterprise can contain only up-level domains.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.ExternalUpLevelDomain">
            <summary>
            All up-level domains external to the enterprise but trusted by the domain to which the target computer is joined.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.ExternalDownLevelDomain">
            <summary>
            All down-level domains external to the enterprise, but trusted by the domain to which the target computer is joined.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.Workgroup">
            <summary>
            The workgroup to which the target computer is joined.
            Applies only if the target computer is not joined to a domain.
            The only type of object that can be selected from a workgroup is a computer.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.UserEnteredUpLevelScope">
            <summary>
            Enables the user to enter an up-level scope.
            If neither of the UserEntered* types is specified,
            the dialog box restricts the user to the scopes in the Look in drop-down list.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType.UserEnteredDownLevelScope">
            <summary>
            Enables the user to enter a down-level scope.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags">
            <summary>
            The DSOPUpLevelFilterFlags structure contains flags that indicate the filters to use for an up-level scope.
            An up-level scope is a scope that supports the ADSI LDAP provider.
            This structure is contained in the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilterFlags"/> structure when calling <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags.flBothModes">
            <summary>
            Filter flags to use for an up-level scope, regardless of whether it is a mixed or native mode domain.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags.flMixedModeOnly">
            <summary>
            Filter flags to use for an up-level domain in mixed mode.
            Mixed mode refers to an up-level domain that may have Windows NT 4.0 Backup Domain Controllers present.
            This member can be a combination of the flags listed in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags.flBothModes"/> flags.
            The <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPFilter.UniversalGroupsSE"/> flag has no affect in a mixed-mode domain because universal security groups do not exist in mixed mode domains.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags.flNativeModeOnly">
            <summary>
            Filter flags to use for an up-level domain in native mode.
            Native mode refers to an up-level domain in which all domain controllers are running Windows 2000 and an administrator has enabled native mode operation.
            This member can be a combination of the flags listed in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPUpLevelFilterFlags.flBothModes"/> flags.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection">
            <summary>
            Contains data about an object the user selected from an object picker dialog box.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection.pwzName">
            <summary>
            Pointer to a null-terminated Unicode string that contains the object's relative distinguished name (RDN).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection.pwzADsPath">
            <summary>
            Pointer to a null-terminated Unicode string that contains the object's ADsPath.
            The format of this string depends on the flags specified in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeInitInfo.flScope"/> for the scope from which this object was selected.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection.pwzClass">
            <summary>
            Pointer to a null-terminated Unicode string that contains the value of the object's objectClass attribute.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection.pwzUPN">
            <summary>
            Pointer to a null-terminated Unicode string that contains the object's userPrincipalName attribute value.
            If the object does not have a userPrincipalName value, pwzUPN points to an empty string (L"").
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection.pvarFetchedAttributes">
            <summary>
            Pointer to an array of <see cref="T:System.Runtime.InteropServices.Variant"/> structures.
            Each Variant contains the value of an attribute of the selected object.
            The attributes retrieved are determined by the attribute names specified in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.apwzAttributeNames"/>
            passed to the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)"/> method.
            The order of attributes in the pvarFetchedAttributes array corresponds to the order of attribute names specified in the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo.apwzAttributeNames"/> array.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSSelection.flScopeType">
            <summary>
            Contains one, or more, of the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPScopeType"/> that indicate the type of scope from which this object was selected.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker">
            <summary>
            The IDsObjectPicker interface is used by an application to initialize and display an object picker dialog box.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.Initialize(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo@)">
            <summary>
            Initializes the interface with data about the scopes, filters, and options used by the dialog box.
            </summary>
            <param name="pInitInfo">pointer to a <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DSOPInitInfo"/> structure that contains the initialization data</param>
            <returns>
            a standard error code or one of the following values:
            <see cref="F:Wanderer.Library.WindowsApi.HResults.OK"/> - the method succeeded,
            <see cref="F:Wanderer.Library.WindowsApi.HResults.InvalidArguments"/> - the contents of one or more of the members of <paramref name="pInitInfo"/> are invalid,
            <see cref="F:Wanderer.Library.WindowsApi.HResults.OutOfMemory"/> - a memory allocation error occurred.
            </returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker.InvokeDialog(System.IntPtr,System.Runtime.InteropServices.ComTypes.IDataObject@)">
            <summary>
            Displays the dialog box and returns the user's selections.
            </summary>
            <param name="hwndParent">
            handle to the owner window of the dialog box;
            this parameter cannot be NULL (<see cref="F:System.IntPtr.Zero"/>) or the result of the GetDesktopWindow function.
            </param>
            <param name="ppdoSelections">
            pointer to an <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject"/> interface pointer that receives a data object that contains data about the user selections;
            this data is supplied in the CFSTR_DSOP_DS_SELECTION_LIST data format;
            this parameter receives null if the user cancels the dialog box
            </param>
            <returns>
            a standard error code or one of the following values:
            <see cref="F:Wanderer.Library.WindowsApi.HResults.OK"/> - the method succeeded,
            <see cref="F:Wanderer.Library.WindowsApi.HResults.False"/> - the user canceled the dialog box, <paramref name="ppdoSelections"/> receives null,
            <see cref="F:Wanderer.Library.WindowsApi.HResults.Unexpected"/> - the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker"/> object has not been initialized.
            </returns>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.DsObjectPicker">
            <summary>
            <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADDS.IDsObjectPicker"/> implementor.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType">
            <summary>
            Specifies the types of initialization to perform on a NameTranslate object.
            It is used in the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate"/> interface.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType.Domain">
            <summary>
            Initializes a NameTranslate object by setting the domain that the object binds to.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType.Server">
            <summary>
            Initializes a NameTranslate object by setting the server that the object binds to.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType.GC">
            <summary>
            Initializes a NameTranslate object by locating the global catalog that the object binds to.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType">
            <summary>
            The NameType enumeration specifies the formats used for representing distinguished names.
            It is used by the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate"/> interface to convert the format of a distinguished name.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType._1779">
            <summary>
            Name format as specified in RFC 1779.
            For example, "CN=Jeff Smith,CN=users,DC=Fabrikam,DC=com".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.Canonical">
            <summary>
            Canonical name format.
            For example, "Fabrikam.com/Users/Jeff Smith".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.NT4">
            <summary>
            Account name format used in Windows NT 4.0.
            For example, "Fabrikam\JeffSmith".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.Display">
            <summary>
            Display name format.
            For example, "Jeff Smith".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.DomainSimple">
            <summary>
            Simple domain name format.
            For example, "JeffSmith@Fabrikam.com".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.EnterpriseSimple">
            <summary>
            Simple enterprise name format.
            For example, "JeffSmith@Fabrikam.com".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.Guid">
            <summary>
            Global Unique Identifier format.
            For example, "{95ee9fff-3436-11d1-b2b0-d15ae3ac8436}".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.Unknown">
            <summary>
            Unknown name type. The system will estimate the format.
            This element is a meaningful option only with the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.Set(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType,System.String)"/> or the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.SetEx(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType,System.Object)"/> method,
            but not with the <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.Get(System.Int32)"/> or <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.GetEx(System.Int32)"/> method.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.UserPrincipalName">
            <summary>
            User principal name format.
            For example, "JeffSmith@Fabrikam.com".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.CanonicalEx">
            <summary>
            Extended canonical name format.
            For example, "Fabrikam.com/Users Jeff Smith".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.ServicePrincipalName">
            <summary>
            Service principal name format.
            For example, "www/www.fabrikam.com@fabrikam.com".
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.SIDorSIDHistoryName">
            <summary>
            A SID string, as defined in the Security Descriptor Definition Language (SDDL), for either the SID of the current object or one from the object SID history.
            For example, "O:AOG:DAD:(A;;RPWPCCDCLCSWRCWDWOGA;;;S-1-0-0)".
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsLargeInteger">
            <summary>
            The IADsLargeInteger interface is used to manipulate 64-bit integers of the LargeInteger type.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsLargeInteger.HighPart">
            <summary>
            Gets and sets the upper 32 bits of the integer.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsLargeInteger.LowPart">
            <summary>
            Gets and sets the lower 32 bits of the integer.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate">
            <summary>
            The IADsNameTranslate interface translates distinguished names (DNs) among various formats as defined in the <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType"/> enumeration.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.Get(System.Int32)">
            <summary>
            Gets the object name, set by <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.Set(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType,System.String)"/>, in a specified format.
            </summary>
            <param name="lnFormatType">
            the format type of the output name
            (for more information, see <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType"/>; this method does not support the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.SIDorSIDHistoryName"/> element)
            </param>
            <returns>the name of the returned object</returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.GetEx(System.Int32)">
            <summary>
            Gets the names of the objects, set by <see cref="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.SetEx(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType,System.Object)"/>, in a specified format.
            </summary>
            <param name="lnFormatType">
            the format type used for the output names
            (for more information about the various types of formats you can use, see <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType"/>;
            this method does not support the <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType.SIDorSIDHistoryName"/> element)
            </param>
            <returns>a variant array of strings that hold names of the objects returned</returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.Init(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType,System.String)">
            <summary>
            Initializes the IADsNameTranslate object with default credentialsю
            </summary>
            <param name="lnInitType">a type of initialization to be performed, possible values are defined in <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType"/></param>
            <param name="bstrADsPath">
            the name of the server or domain, depending on the value of <paramref name="lnInitType"/>: when <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType.GC"/> is issued, this parameter is ignored;
            the global catalog server of the domain of the current computer will perform the name translate operations;
            this method will fail if the computer is not part of a domain as no global catalog will be found in this scenario
            (for more information, see <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType"/>)
            </param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.InitEx(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes the IADsNameTranslate object with specified credentials.
            </summary>
            <param name="lnInitType">a type of initialization to be performed, possible values are defined in <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType"/></param>
            <param name="bstrADsPath">
            the name of the server or domain, depending on the value of <paramref name="lnInitType"/>: when <see cref="F:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType.GC"/> is issued, this parameter is ignored;
            the global catalog server of the domain of the current computer will perform the name translate operations;
            this method will fail if the computer is not part of a domain as no global catalog will be found in this scenario
            (for more information, see <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameInitType"/>)
            </param>
            <param name="bstrUserId">user name</param>
            <param name="bstrDomain">user domain name</param>
            <param name="bstrPassword">user password</param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.Set(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType,System.String)">
            <summary>
            Specifies the object name to translate.
            </summary>
            <param name="lnSetType">the format of the name of a directory object (for more information, see <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType"/>)</param>
            <param name="bstrADsPath">the object name (for example, "CN=Administrator, CN=users, DC=Fabrikam, DC=com")</param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.SetEx(Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType,System.Object)">
            <summary>
            Sets the names of multiple objects at the same time.
            </summary>
            <param name="lnFormatType">the format type of the input names (for more information, see <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameType"/>)</param>
            <param name="pVar">a variant array of strings that hold object names</param>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate.ChaseReferral">
            <summary>
            Toggles referral chasing ON or OFF.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.ADsNameTranslate">
            <summary>
            <see cref="T:Wanderer.Library.WindowsApi.COM.DirectoryServices.ADS.IADsNameTranslate"/> implementor.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.COM.NativeMethods">
            <summary>
            COM Windows API functions.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.COM.NativeMethods.ReleaseStgMedium(System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Frees the specified storage medium.
            </summary>
            <param name="pMedium">pointer to the storage medium that is to be freed</param>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Desktop.NativeMethods">
            <summary>
            Windows Station and Desktop Windows API functions.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.ErrorCodes">
            <summary>
            Contains Windows API error codes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.Success">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.NoError">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.AccessDenied">
            <summary>
            Access is denied.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.NotEnoughMemory">
            <summary>
            Not enough storage is available to process this command.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.NoToken">
            <summary>
            An attempt was made to reference a token that does not exist.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.ServiceDisabled">
            <summary>
            The service cannot be started,
            either because it is disabled or because it has no enabled devices associated with it.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.NotAllAssigned">
            <summary>
            Not all privileges or groups referenced are assigned to the caller.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.NoSuchPrivilege">
            <summary>
            A specified privilege does not exist.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ErrorCodes.CantOpenAnonymous">
            <summary>
            Cannot open an anonymous level security token.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract">
            <summary>
            Contains code contracts definition for interface <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessExtended"/>.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.IProcessExtended">
            <summary>
            Provides additonal functionality for process, for example resume/suspend.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.ResetCpuUsage">
            <summary>
            Reset CPU usage value and time.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.Resume">
            <summary>
            Resume the process.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.Suspend">
            <summary>
            Suspend the process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.Process">
            <summary>
            Extended process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.CpuUsage">
            <summary>
            CPU usage in percent.
            This is cumulative value which calculated from the first time when <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessExtended"/> was created.
            Can be cleared by <see cref="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.ResetCpuUsage"/> method.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.IsSuspended">
            <summary>
            Indicates that the process was suspended.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.IsDisposed">
            <summary>
            Determines whether object already disposed or not.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.Wanderer#Library#WindowsApi#Helpers#IProcessExtended#ResetCpuUsage">
            <summary>
            Reset CPU usage value and time.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.Wanderer#Library#WindowsApi#Helpers#IProcessExtended#Resume">
            <summary>
            Resume the process.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.Wanderer#Library#WindowsApi#Helpers#IProcessExtended#Suspend">
            <summary>
            Suspend the process.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.System#IDisposable#Dispose">
            <summary>
            <see cref="T:System.IDisposable"/> interface implementation.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.Wanderer#Library#WindowsApi#Helpers#IProcessExtended#Process">
            <summary>
            Extended process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.Wanderer#Library#WindowsApi#Helpers#IProcessExtended#CpuUsage">
            <summary>
            CPU usage in percent.
            This is cumulative value which calculated from the first time when <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessExtended"/> was created.
            Can be cleared by <see cref="M:Wanderer.Library.WindowsApi.Helpers.IProcessExtended.ResetCpuUsage"/> method.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.IsSuspended">
            <summary>
            Indicates that the process was suspended.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessExtendedContract.IsDisposed">
            <summary>
            Determines whether object already disposed or not.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject">
            <summary>
            Details of a directory object selected in the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/>.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject.#ctor(System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Initialize constructor.
            </summary>
            <param name="name">directory object's relative distinguished name (RDN)</param>
            <param name="path">Active Directory path for this directory object</param>
            <param name="schemaClass">name of the schema class for this directory object (objectClass attribute)</param>
            <param name="upn">objects user principal name (userPrincipalName attribute)</param>
            <param name="fetchedAttributes">attributes retrieved by the object picker as it makes the selection</param>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject.Path">
            <summary>
            Gets the Active Directory path for this directory object.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject.SchemaClassName">
            <summary>
            Gets the name of the schema class for this directory object (objectClass attribute).
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject.Name">
            <summary>
            Gets the directory object's relative distinguished name (RDN).
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject.Upn">
            <summary>
            Gets the objects user principal name (userPrincipalName attribute).
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.DirectoryObject.FetchedAttributes">
            <summary>
            Gets attributes retrieved by the object picker as it makes the selection.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog">
            <summary>
            Represents a dialog that allows a user to select users.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog">
            <summary>
            Represents a common dialog that allows a user to select directory objects.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.Reset">
            <summary>
            Resets the properties of a dialog box to their default values.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.RunDialog(System.IntPtr)">
            <summary>
            Displays the Object Picker (Active Directory) common dialog, when called by ShowDialog.
            </summary>
            <param name="hwndOwner">handle to the window that owns the dialog</param>
            <returns>if the user clicks the OK button of the Object Picker dialog that is displayed, true is returned; otherwise, false.</returns>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.AllowedLocations">
            <summary>
            Gets or sets the scopes the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/> is allowed to search.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.DefaultLocations">
            <summary>
            Gets or sets the initially selected scope in the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/>.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.AllowedTypes">
            <summary>
            Gets or sets the types of objects the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/> is allowed to search for.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.DefaultTypes">
            <summary>
            Gets or sets the initially seleted types of objects in the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/>.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.Providers">
            <summary>
            Gets or sets the providers affecting the ADPath returned in objects.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.MultiSelect">
            <summary>
            Gets or sets whether the user can select multiple objects.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.SkipDomainControllerCheck">
            <summary>
            Gets or sets the whether to check whether the target is a Domain Controller and hide the "Local Computer" scope.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.AttributesToFetch">
            <summary>
            List of LDAP attribute names that will be retrieved for picked objects.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.SelectedObjects">
            <summary>
            Gets an array of the directory objects selected in the dialog.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.ShowAdvancedView">
            <summary>
            Gets or sets whether objects flagged as show in advanced view only are displayed (up-level).
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog.TargetComputer">
            <summary>
            Gets or sets the name of the target computer.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog.#ctor(Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialogType)">
            <summary>
            Default/Initialize constructor.
            </summary>
            <param name="dialogType">determines the behaviour of dialog (select user or user groups)</param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog.RunDialog(System.IntPtr)">
            <summary>
            Displays the Object Picker (Active Directory) common dialog, when called by ShowDialog.
            </summary>
            <param name="hwndOwner">handle to the window that owns the dialog</param>
            <returns>if the user clicks the OK button of the Object Picker dialog that is displayed, true is returned; otherwise, false.</returns>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog.SelectedEntities">
            <summary>
            List of selected users.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialogType">
            <summary>
            Determines the behaviour type for <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog"/>.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialogType.Users">
            <summary>
            Determines that through <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog"/> will select only an users.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialogType.Groups">
            <summary>
            Determines that through <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.EntityPickerDialog"/> will select only an user groups.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location">
            <summary>
            Indicates the scope the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/> searches for objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.None">
            <summary>
            No locations.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.LocalComputer">
            <summary>
            The target computer (down-level).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.JoinedDomain">
            <summary>
            A domain to which the target computer is joined (down-level and up-level).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.EnterpriseDomain">
            <summary>
            All Windows 2000 domains in the enterprise to which the target computer belongs (up-level).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.GlobalCatalog">
            <summary>
            A scope containing objects from all domains in the enterprise (up-level). 
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.ExternalDomain">
            <summary>
            All domains external to the enterprise, but trusted by the domain to which the target computer is joined (down-level and up-level).
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.Workgroup">
            <summary>
            The workgroup to which the target computer is joined (down-level). 
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.UserEntered">
            <summary>
            Enables the user to enter a scope (down-level and up-level). 
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.Location.All">
            <summary>
            All locations.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType">
            <summary>
            Indicates the type of objects the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/> searches for.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.None">
            <summary>
            No object types.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.Users">
            <summary>
            Includes user objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.Groups">
            <summary>
            Includes security groups with universal scope. 
            </summary>
            <remarks>
            <para>
            In an up-level scope, this includes distribution and security groups, with universal, global and domain local scope.
            </para>
            <para>
            In a down-level scope, this includes local and global groups.
            </para>
            </remarks>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.Computers">
            <summary>
            Includes computer objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.Contacts">
            <summary>
            Includes contact objects.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.BuiltInGroups">
            <summary>
            Includes built-in group objects.
            </summary>
            <summary>
            <para>
            In an up-level scope, this includes group objects with the built-in groupType flags.
            </para>
            <para>
            In a down-level scope, not setting this object type excludes local built-in groups.
            </para>
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.WellKnownPrincipals">
            <summary>
            Includes all well-known security principals. 
            </summary>
            <remarks>
            <para>
            In an up-level scope, this includes the contents of the Well Known Security Principals container.
            </para>
            <para>
            In a down-level scope, this includes all well-known SIDs.
            </para>
            </remarks>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectType.All">
            <summary>
            All object types.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider">
            <summary>
            Indicates the ADsPath provider type of the <see cref="T:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.ObjectPickerDialog"/>.
            This provider affects the contents of the ADPath returned.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider.Default">
            <summary>
            Default path provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider.WinNT">
            <summary>
            The ADsPath are converted to use the WinNT provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider.LDAP">
            <summary>
            The ADsPaths are converted to use the LDAP provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider.GC">
            <summary>
            The ADsPaths for objects selected from this scope are converted to use the GC provider.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider.SIDPath">
            <summary>
            The ADsPaths having an objectSid attribute are converted to the form 
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.Helpers.ObjectPicker.PathProvider.DownlevelBuildinPath">
            <summary>
            The ADsPaths for down-level, well-known SID objects are an empty string unless this flag is specified (For example; DSOP_DOWNLEVEL_FILTER_INTERACTIVE).
            If this flag is specified, the paths have the form: 
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.HResults">
            <summary>
            Contains Windows COM API error codes.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.OK">
            <summary>
            Operation successful.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.False">
            <summary>
            Operation successful.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.NotImplemented">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.NoInterface">
            <summary>
            No such interface supported.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.Pointer">
            <summary>
            Pointer that is not valid.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.Abort">
            <summary>
            Operation aborted.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.Fail">
            <summary>
            Unspecified failure.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.Unexpected">
            <summary>
            Unexpected failure.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.AccessDenied">
            <summary>
            General access denied error.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.Handle">
            <summary>
            Handle that is not valid.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.OutOfMemory">
            <summary>
            Failed to allocate necessary memory.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.HResults.InvalidArguments">
            <summary>
            One or more arguments are not valid.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Memory.NativeMethods">
            <summary>
            Memory menagement Windows API functions.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Memory.NativeMethods.GlobalLock(System.IntPtr)">
            <summary>
            Locks a global memory object and returns a pointer to the first byte of the object's memory block.
            </summary>
            <param name="hMem">a handle to the global memory object</param>
            <returns>
            if the function succeeds, the return value is a pointer to the first byte of the memory block;
            if the function fails, the return value is NULL (<see cref="F:System.IntPtr.Zero"/>)
            </returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Memory.NativeMethods.GlobalUnlock(System.IntPtr)">
            <summary>
            Decrements the lock count associated with a memory object.
            </summary>
            <param name="hMem">a handle to the global memory object</param>
            <returns>
            if the memory object is still locked after decrementing the lock count, the return value is a nonzero value;
            if the memory object is unlocked after decrementing the lock count, the function returns zero and <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> returns <see cref="F:Wanderer.Library.WindowsApi.ErrorCodes.NoError"/>.
            </returns>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.NativeConstants">
            <summary>
            Contains Windows API constants.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.NativeMethods">
            <summary>
            Common Windows API functions.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.CpuLimiter">
            <summary>
            Provides feature to control maximum CPU usage for list of processes.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.CpuLimiter.Dispose">
            <summary>
            <see cref="T:System.IDisposable"/> interface implementation.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.CpuLimiter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.CpuLimiter.AddProcessToWatchList(Wanderer.Library.WindowsApi.Helpers.IProcessWatcher)">
            <summary>
            Add process to list of controlled processes.
            </summary>
            <param name="processWatcher"><see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher"/></param>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher">
            <summary>
            Helper interface for process CPU clamping.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher.WatchedProcess">
            <summary>
            Controlled process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher.MaxCpuUsage">
            <summary>
            Maximum avaliable CPU usage for the process.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ProcessExtended">
            <summary>
            Provides additonal functionality for process, for example resume/suspend.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.ResetCpuUsage">
            <summary>
            Reset CPU usage value and time.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.Resume">
            <summary>
            Resume the process.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.Suspend">
            <summary>
            Suspend the process.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.Dispose">
            <summary>
            <see cref="T:System.IDisposable"/> interface implementation.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.#ctor(System.Int32)">
            <summary>
            Initialize constructor.
            </summary>
            <param name="processId">id of extended process</param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.#ctor(System.Diagnostics.Process)">
            <summary>
            Initialize constructor.
            </summary>
            <param name="process">extended process</param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.Dispose(System.Boolean)">
            <summary>
            Internal implementation of <see cref="T:System.IDisposable"/> interface.
            </summary>
            <param name="disposing">indicates that method called from public Dispose method</param>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.Process">
            <summary>
            Extended process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.CpuUsage">
            <summary>
            CPU usage in percent.
            This is cumulative value which calculated from the first time when <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessExtended"/> was created.
            Can be cleared by <see cref="M:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.ResetCpuUsage"/> method.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.IsSuspended">
            <summary>
            Indicates that the process was suspended.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessExtended.IsDisposed">
            <summary>
            Determines whether object already disposed or not.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher">
            <summary>
            Helper class for process CPU clamping.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.Dispose">
            <summary>
            <see cref="T:System.IDisposable"/> interface implementation.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.Equals(Wanderer.Library.WindowsApi.Helpers.IProcessWatcher)">
            <summary>
            Indicates whether the current <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher"/> object is equal to another <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher"/> object.
            </summary>
            <param name="other">an <see cref="T:Wanderer.Library.WindowsApi.Helpers.IProcessWatcher"/> to compare</param>
            <returns><b>true</b> if current object is equal to <i>other</i> parameter; otherwise, <b>false</b></returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.#ctor(Wanderer.Library.WindowsApi.Helpers.IProcessExtended,System.UInt32)">
            <summary>
            Initialize constructor.
            </summary>
            <param name="processExtended">controlled process</param>
            <param name="maxCpuUsage">maximum avaliable CPU usage for the process</param>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">the object to compare with the current object</param>
            <returns>true if the specified object is equal to the current object; otherwise, false</returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher"/>.
            </summary>
            <returns>a hash code for the current <see cref="T:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher"/></returns>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.Dispose(System.Boolean)">
            <summary>
            Internal implementation of <see cref="T:System.IDisposable"/> interface.
            </summary>
            <param name="disposing">indicates that method called from public Dispose method</param>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.WatchedProcess">
            <summary>
            Controlled process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.MaxCpuUsage">
            <summary>
            Maximum avaliable CPU usage for the process.
            </summary>
        </member>
        <member name="P:Wanderer.Library.WindowsApi.Helpers.ProcessWatcher.IsDisposed">
            <summary>
            Determines whether object already disposed or not.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Nt.NativeMethods">
            <summary>
            A NT API functions.
            </summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.Nt.NtStatus">
            <summary>
            A NT status value.
            </summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.AllAccess">
            <summary>All possible access rights for a process object.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.CreateThread">
            <summary>Required to create a thread.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.DuplicateHandle">
            <summary>Required to duplicate a handle using <see cref="!:NativeMethods.DuplicateHandle"/>.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.QueryInformation">
            <summary>Required to retrieve certain information about a process, such as its token, exit code, and priority class (<see cref="!:NativeMethods.OpenProcessToken"/>).</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.SetInformation">
            <summary>Required to set certain information about a process, such as its priority class (<see cref="!:NativeMethods.SetPriorityClass"/>).</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.SuspendResume">
            <summary>Required to suspend or resume a process.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.Terminate">
            <summary>Required to terminate a process using <see cref="!:NativeMethods.TerminateProcess"/>.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.VmOperation">
            <summary>Required to perform an operation on the address space of a process (<see cref="!:NativeMethods.VirtualProtectEx"/> and <see cref="!:NativeMethods.WriteProcessMemory"/>).</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.VmRead">
            <summary>Required to read memory in a process using <see cref="!:NativeMethods.ReadProcessMemory"/>.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.VmWrite">
            <summary>Required to write to memory in a process using <see cref="!:NativeMethods.WriteProcessMemory"/>.</summary>
        </member>
        <member name="F:Wanderer.Library.WindowsApi.ProcessAccess.Synchronize">
            <summary>Required to wait for the process to terminate using the wait functions.</summary>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.SafeHandles.SafeTokenHandle">
            <summary>
            Provides a class for Win32 safe token handle implementations in which the value of either 0 or -1 indicates an invalid handle.
            </summary>
        </member>
        <member name="M:Wanderer.Library.WindowsApi.SafeHandles.SafeTokenHandle.ReleaseHandle">
            <summary>
             Executes the code required to free the handle.
            </summary>
            <returns>true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false</returns>
        </member>
        <member name="T:Wanderer.Library.WindowsApi.SafeHandles.SafeWindowStationHandle">
            <summary>
            Provides a class for Window Station.
            </summary>
        </member>
    </members>
</doc>
